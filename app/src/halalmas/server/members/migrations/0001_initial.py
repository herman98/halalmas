# Generated by Django 3.0.7 on 2020-06-25 18:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('objects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerUserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('role_name', models.CharField(blank=True, max_length=125, null=True)),
            ],
            options={
                'verbose_name_plural': 'Customer User Roles',
                'db_table': 'user_roles',
                'ordering': ['role_name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCustomerUserProfile',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cdate', models.DateTimeField(blank=True, editable=False)),
                ('udate', models.DateTimeField(blank=True, editable=False)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('salt', models.CharField(blank=True, max_length=300, null=True)),
                ('first_name', models.CharField(blank=True, max_length=125, null=True)),
                ('last_name', models.CharField(blank=True, max_length=125, null=True)),
                ('full_name', models.CharField(blank=True, max_length=225, null=True)),
                ('avatar', models.CharField(blank=True, max_length=225, null=True)),
                ('address_home', models.TextField(blank=True, null=True)),
                ('address_office', models.CharField(blank=True, max_length=25, null=True)),
                ('confirm_date', models.DateTimeField(blank=True, null=True)),
                ('login_with', models.CharField(blank=True, choices=[('FACEBOOK', 'FACEBOOK'), ('GOOGLE', 'GOOGLE'), ('INSTAGRAM', 'INSTAGRAM'), ('TWITTER', 'TWITTER'), ('NORMAL', 'NORMAL')], default='NORMAL', help_text='this user login with 3rd party app.', max_length=50, null=True, verbose_name='Login With')),
                ('login_from', models.CharField(blank=True, choices=[('ANDROID', 'ANDROID'), ('IOS', 'IOS'), ('WEBSITE', 'WEBSITE')], default='WEBSITE', help_text='this user login from internal system.', max_length=50, null=True, verbose_name='Login From')),
                ('is_confirm', models.BooleanField(blank=True, default=False, null=True)),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biodata Customer')),
                ('location', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_email_verified', models.NullBooleanField()),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_phone_verified', models.NullBooleanField()),
                ('country', models.CharField(blank=True, default='ID', max_length=50, null=True)),
                ('self_referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('email_verification_key', models.CharField(blank=True, max_length=300, null=True)),
                ('email_key_exp_date', models.DateTimeField(blank=True, null=True)),
                ('reset_password_key', models.CharField(blank=True, max_length=300, null=True)),
                ('reset_password_exp_date', models.DateTimeField(blank=True, null=True)),
                ('password_social_media', models.CharField(blank=True, max_length=300, null=True)),
                ('hash_user', models.CharField(blank=True, max_length=300, null=True)),
                ('latest_change_password', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical customer user profile',
                'db_table': 'user_profile_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('salt', models.CharField(blank=True, max_length=300, null=True)),
                ('first_name', models.CharField(blank=True, max_length=125, null=True)),
                ('last_name', models.CharField(blank=True, max_length=125, null=True)),
                ('full_name', models.CharField(blank=True, max_length=225, null=True)),
                ('avatar', models.CharField(blank=True, max_length=225, null=True)),
                ('address_home', models.TextField(blank=True, null=True)),
                ('address_office', models.CharField(blank=True, max_length=25, null=True)),
                ('confirm_date', models.DateTimeField(blank=True, null=True)),
                ('login_with', models.CharField(blank=True, choices=[('FACEBOOK', 'FACEBOOK'), ('GOOGLE', 'GOOGLE'), ('INSTAGRAM', 'INSTAGRAM'), ('TWITTER', 'TWITTER'), ('NORMAL', 'NORMAL')], default='NORMAL', help_text='this user login with 3rd party app.', max_length=50, null=True, verbose_name='Login With')),
                ('login_from', models.CharField(blank=True, choices=[('ANDROID', 'ANDROID'), ('IOS', 'IOS'), ('WEBSITE', 'WEBSITE')], default='WEBSITE', help_text='this user login from internal system.', max_length=50, null=True, verbose_name='Login From')),
                ('is_confirm', models.BooleanField(blank=True, default=False, null=True)),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biodata Customer')),
                ('location', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(blank=True, max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_email_verified', models.NullBooleanField()),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_phone_verified', models.NullBooleanField()),
                ('country', models.CharField(blank=True, default='ID', max_length=50, null=True)),
                ('self_referral_code', models.CharField(blank=True, max_length=20, null=True)),
                ('email_verification_key', models.CharField(blank=True, max_length=300, null=True)),
                ('email_key_exp_date', models.DateTimeField(blank=True, null=True)),
                ('reset_password_key', models.CharField(blank=True, max_length=300, null=True)),
                ('reset_password_exp_date', models.DateTimeField(blank=True, null=True)),
                ('password_social_media', models.CharField(blank=True, max_length=300, null=True)),
                ('hash_user', models.CharField(blank=True, max_length=300, null=True)),
                ('latest_change_password', models.DateField(blank=True, null=True)),
                ('role', models.ManyToManyField(to='members.CustomerUserRole')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Customer Profiles',
                'db_table': 'user_profile',
                'ordering': ['user__username', 'full_name', 'salt'],
            },
        ),
        migrations.CreateModel(
            name='CustomerCompanyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('is_pkp', models.BooleanField(blank=True, default=False, null=True)),
                ('is_potong_pajak', models.BooleanField(blank=True, default=False, null=True)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='objects.BankAccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.Company')),
                ('customer_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.CustomerUserProfile')),
            ],
            options={
                'verbose_name_plural': 'Customer User Company ',
                'db_table': 'user_profile_company',
                'ordering': ['company__name'],
            },
        ),
    ]
