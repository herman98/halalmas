# Generated by Django 3.0.7 on 2020-06-25 18:54

import cuser.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
from django.db import migrations, models
import django.db.models.deletion
import halalmas.server.models
import halalmas.server.objects.indonesia.interfaces
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('code', models.CharField(help_text='e.g: BCA, Bank Mandiri, BRI, etc', max_length=50, verbose_name='Kode Bank')),
                ('name', models.CharField(blank=True, help_text='PT. Bank Central Asia, PT. Bank Mandiri', max_length=125, null=True, verbose_name='Nama Bank')),
                ('country', models.CharField(blank=True, default='ID - Indonesia', max_length=125, null=True, verbose_name='Negara')),
            ],
            options={
                'verbose_name_plural': 'Banks',
                'db_table': 'm_bank',
                'ordering': ['code', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=125)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=1500, null=True)),
                ('kodepos', models.CharField(blank=True, max_length=10, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('coord_google', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('coord_osm', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('description_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('building_access_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('facilities_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_id', models.BooleanField(blank=True, default=False, null=True)),
                ('is_building_access_id', models.BooleanField(blank=True, default=False, null=True)),
                ('is_facilities_id', models.BooleanField(blank=True, default=False, null=True)),
                ('description_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('building_access_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('facilities_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_en', models.BooleanField(blank=True, default=False, null=True)),
                ('is_building_access_en', models.BooleanField(blank=True, default=False, null=True)),
                ('is_facilities_en', models.BooleanField(blank=True, default=False, null=True)),
                ('operational_hour_per_day', models.IntegerField(blank=True, null=True)),
                ('operational_day_per_week', models.IntegerField(blank=True, null=True)),
                ('operational_day_per_month', models.IntegerField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('xwork_pk', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'm_buildings',
                'ordering': ['name'],
            },
            bases=(models.Model, halalmas.server.models.JSONModel),
        ),
        migrations.CreateModel(
            name='BuildingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'm_building_categories',
                'ordering': ['name'],
            },
            bases=(models.Model, halalmas.server.models.JSONModel),
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('curr_name', models.CharField(max_length=80, verbose_name='Currency Name')),
                ('curr_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_buy', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('creator', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='m_currency', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
            ],
            options={
                'verbose_name': 'Currency Rate',
                'verbose_name_plural': 'Currency Rates',
                'db_table': 'm_currency',
                'ordering': ['curr_name'],
            },
        ),
        migrations.CreateModel(
            name='KabupatenBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('gid_0', models.CharField(max_length=80)),
                ('name_0', models.CharField(max_length=80, verbose_name='Negara')),
                ('gid_1', models.CharField(max_length=80)),
                ('name_1', models.CharField(max_length=80, verbose_name='Propinsi')),
                ('nl_name_1', models.CharField(max_length=80)),
                ('gid_2', models.CharField(max_length=80)),
                ('name_2', models.CharField(max_length=80, verbose_name='Kabupaten/Kota')),
                ('varname_2', models.CharField(max_length=80)),
                ('nl_name_2', models.CharField(max_length=80)),
                ('type_2', models.CharField(max_length=80)),
                ('engtype_2', models.CharField(max_length=80)),
                ('cc_2', models.CharField(max_length=80)),
                ('hasc_2', models.CharField(max_length=80)),
                ('slug_0', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_1', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_2', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'Kabupaten / Kota',
                'verbose_name_plural': 'Kabupaten / Kota',
                'db_table': 'gis_kabupaten',
                'ordering': ['name_1', 'name_2'],
            },
            bases=(models.Model, halalmas.server.objects.indonesia.interfaces.IndonesiaAdministrativeArea, halalmas.server.objects.indonesia.interfaces.AreaPropertyInfo),
        ),
        migrations.CreateModel(
            name='KecamatanBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('gid_0', models.CharField(max_length=80)),
                ('name_0', models.CharField(max_length=80, verbose_name='Negara')),
                ('gid_1', models.CharField(max_length=80)),
                ('name_1', models.CharField(max_length=80, verbose_name='Propinsi')),
                ('nl_name_1', models.CharField(max_length=80)),
                ('gid_2', models.CharField(max_length=80)),
                ('name_2', models.CharField(max_length=80, verbose_name='Kabupaten')),
                ('nl_name_2', models.CharField(max_length=80)),
                ('gid_3', models.CharField(max_length=80)),
                ('name_3', models.CharField(max_length=80, verbose_name='Kecamatan')),
                ('varname_3', models.CharField(max_length=80)),
                ('nl_name_3', models.CharField(max_length=80)),
                ('type_3', models.CharField(max_length=80)),
                ('engtype_3', models.CharField(max_length=80)),
                ('cc_3', models.CharField(max_length=80)),
                ('hasc_3', models.CharField(max_length=80)),
                ('slug_0', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_1', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_2', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_3', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'Kecamatan',
                'verbose_name_plural': 'Kecamatan',
                'db_table': 'gis_kecamatan',
                'ordering': ['name_1', 'name_2', 'name_3'],
            },
            bases=(models.Model, halalmas.server.objects.indonesia.interfaces.IndonesiaAdministrativeArea, halalmas.server.objects.indonesia.interfaces.AreaPropertyInfo),
        ),
        migrations.CreateModel(
            name='KelurahanBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('gid_0', models.CharField(max_length=80)),
                ('name_0', models.CharField(max_length=80, verbose_name='Negara')),
                ('gid_1', models.CharField(max_length=80)),
                ('name_1', models.CharField(max_length=80, verbose_name='Propinsi')),
                ('gid_2', models.CharField(max_length=80)),
                ('name_2', models.CharField(max_length=80, verbose_name='Kabupaten')),
                ('gid_3', models.CharField(max_length=80)),
                ('name_3', models.CharField(max_length=80, verbose_name='Kecamatan')),
                ('gid_4', models.CharField(max_length=80)),
                ('name_4', models.CharField(max_length=80, verbose_name='Kelurahan')),
                ('varname_4', models.CharField(max_length=80)),
                ('type_4', models.CharField(max_length=80)),
                ('engtype_4', models.CharField(max_length=80)),
                ('cc_4', models.CharField(max_length=80)),
                ('slug_0', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_1', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_2', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_3', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_4', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'Kelurahan',
                'verbose_name_plural': 'Kelurahan',
                'db_table': 'gis_kelurahan',
                'ordering': ['name_1', 'name_2', 'name_3', 'name_4'],
            },
            bases=(models.Model, halalmas.server.objects.indonesia.interfaces.IndonesiaAdministrativeArea, halalmas.server.objects.indonesia.interfaces.AreaPropertyInfo),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=125)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('coord_google', django.contrib.gis.db.models.fields.PointField(blank=True, default=django.contrib.gis.geos.point.Point(0, 0), null=True, srid=4326)),
                ('coord_osm', django.contrib.gis.db.models.fields.PointField(blank=True, default=django.contrib.gis.geos.point.Point(0, 0), null=True, srid=4326)),
            ],
            options={
                'db_table': 'm_locations',
                'ordering': ['name'],
            },
            bases=(models.Model, halalmas.server.models.JSONModel),
        ),
        migrations.CreateModel(
            name='PointOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('poi_name', models.CharField(max_length=80, verbose_name='Name')),
                ('is_radius', models.BooleanField(blank=True, default=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('json_multipolygon', models.TextField(blank=True, null=True)),
                ('radius', models.FloatField(blank=True, null=True, verbose_name='Radius')),
                ('geom_point_google', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geom_point_osm', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geom_multipolygon', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('creator', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gis_point_of_interests', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
            ],
            options={
                'verbose_name': 'Point Of Interest',
                'verbose_name_plural': 'Point Of Interests',
                'db_table': 'gis_point_of_interests',
                'ordering': ['poi_name'],
            },
        ),
        migrations.CreateModel(
            name='ProvinsiBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('gid_0', models.CharField(max_length=80)),
                ('name_0', models.CharField(max_length=80, verbose_name='Negara')),
                ('gid_1', models.CharField(max_length=80)),
                ('name_1', models.CharField(max_length=80, verbose_name='Propinsi')),
                ('varname_1', models.CharField(max_length=80)),
                ('nl_name_1', models.CharField(max_length=80)),
                ('type_1', models.CharField(max_length=80)),
                ('engtype_1', models.CharField(max_length=80)),
                ('cc_1', models.CharField(max_length=80)),
                ('hasc_1', models.CharField(max_length=80)),
                ('slug_0', models.CharField(blank=True, max_length=255, null=True)),
                ('slug_1', models.CharField(blank=True, max_length=255, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name': 'Propinsi',
                'verbose_name_plural': 'Propinsi',
                'db_table': 'gis_propinsi',
                'ordering': ['name_1'],
            },
            bases=(models.Model, halalmas.server.objects.indonesia.interfaces.IndonesiaAdministrativeArea, halalmas.server.objects.indonesia.interfaces.AreaPropertyInfo),
        ),
        migrations.CreateModel(
            name='PublicTransport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_id', models.BooleanField(blank=True, default=False, null=True)),
                ('description_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_en', models.BooleanField(blank=True, default=False, null=True)),
                ('transport_type', models.IntegerField(blank=True, choices=[(5, 'BANDARA'), (9, 'BUS'), (2, 'BUSWAY'), (8, 'BUS TERMINAL'), (4, 'HALTE'), (1, 'KRL'), (3, 'MRT'), (7, 'SEA PORT'), (6, 'TRAIN STATION'), (99, 'OTHERS')], default=9, null=True)),
            ],
            options={
                'verbose_name': 'Public Transport',
                'verbose_name_plural': 'Public Transports',
                'db_table': 'm_public_transports',
                'ordering': ['name'],
            },
            bases=(models.Model, halalmas.server.models.JSONModel),
        ),
        migrations.CreateModel(
            name='PopularMall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('sequence', models.SmallIntegerField(blank=True, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='objects.Building', verbose_name='Building/Mall')),
            ],
            options={
                'verbose_name': 'Popular Mall',
                'verbose_name_plural': 'Popular Mall',
                'db_table': 'm_popular_mall',
                'ordering': ['sequence'],
            },
        ),
        migrations.CreateModel(
            name='PointOfInterestCoverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('coverage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='objects.KelurahanBorder', verbose_name='Coverage')),
                ('poi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='objects.PointOfInterest', verbose_name='Point Of Interest')),
            ],
            options={
                'verbose_name': 'Point Of Interest Coverage',
                'verbose_name_plural': 'Point Of Interests Coverage',
                'db_table': 'gis_poi_coverage',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCurrency',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cdate', models.DateTimeField(blank=True, editable=False)),
                ('udate', models.DateTimeField(blank=True, editable=False)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('curr_name', models.CharField(max_length=80, verbose_name='Currency Name')),
                ('curr_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_buy', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('creator', cuser.fields.CurrentUserField(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Currency Rate',
                'db_table': 'm_currency_upd_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBuilding',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cdate', models.DateTimeField(blank=True, editable=False)),
                ('udate', models.DateTimeField(blank=True, editable=False)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=125)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=1500, null=True)),
                ('kodepos', models.CharField(blank=True, max_length=10, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('coord_google', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('coord_osm', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0, 0), srid=4326)),
                ('description_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('building_access_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('facilities_id', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_id', models.BooleanField(blank=True, default=False, null=True)),
                ('is_building_access_id', models.BooleanField(blank=True, default=False, null=True)),
                ('is_facilities_id', models.BooleanField(blank=True, default=False, null=True)),
                ('description_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('building_access_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('facilities_en', models.CharField(blank=True, max_length=5000, null=True)),
                ('is_desc_en', models.BooleanField(blank=True, default=False, null=True)),
                ('is_building_access_en', models.BooleanField(blank=True, default=False, null=True)),
                ('is_facilities_en', models.BooleanField(blank=True, default=False, null=True)),
                ('operational_hour_per_day', models.IntegerField(blank=True, null=True)),
                ('operational_day_per_week', models.IntegerField(blank=True, null=True)),
                ('operational_day_per_month', models.IntegerField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=255, null=True)),
                ('xwork_pk', models.IntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('building_category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='objects.BuildingCategory')),
                ('creator', cuser.fields.CurrentUserField(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical building',
                'db_table': 'm_buildings_history',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CurrencyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('curr_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('rate_buy', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='objects.Currency', verbose_name='Selected Currency')),
            ],
            options={
                'verbose_name': 'Currency Rate History',
                'verbose_name_plural': 'Currency Rate Histories',
                'db_table': 'm_currency_history',
                'ordering': ['-cdate'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=125)),
                ('organization_type', models.CharField(blank=True, choices=[('CV', 'CV'), ('Individual', 'INDIVIDUAL'), ('NGO', 'NGO'), ('PT', 'PT'), ('Others', 'OTHERS')], default='PT', help_text='pick one of this organization type.', max_length=50, null=True, verbose_name='Tipe Organisasi')),
                ('group_type', models.IntegerField(blank=True, choices=[(2, 'Customer'), (5, 'Facility Provider'), (4, 'Fnb Provider'), (1, 'Host'), (3, 'Host And Customer'), (99, 'Others')], default=1, null=True, verbose_name='Tipe Host')),
                ('npwp', models.CharField(blank=True, max_length=125, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('post_code', models.CharField(blank=True, max_length=25, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('siup', models.CharField(blank=True, max_length=125, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=150, null=True)),
                ('kelurahan', models.CharField(blank=True, max_length=150, null=True)),
                ('kecamatan', models.CharField(blank=True, max_length=150, null=True)),
                ('kabupaten', models.CharField(blank=True, max_length=150, null=True)),
                ('propinsi', models.CharField(blank=True, max_length=150, null=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('floor', models.CharField(blank=True, max_length=50, null=True)),
                ('creator', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='m_company', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='objects.Location')),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'm_company',
                'ordering': ['name', 'group_type'],
            },
        ),
        migrations.AddField(
            model_name='building',
            name='building_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='objects.BuildingCategory'),
        ),
        migrations.AddField(
            model_name='building',
            name='creator',
            field=cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='m_buildings', to=settings.AUTH_USER_MODEL, verbose_name='createby'),
        ),
        migrations.AddField(
            model_name='building',
            name='public_transport',
            field=models.ManyToManyField(to='objects.PublicTransport'),
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdate', models.DateTimeField(auto_now_add=True)),
                ('udate', models.DateTimeField(auto_now=True)),
                ('delstatus', models.BooleanField(default=False)),
                ('deldate', models.DateTimeField(blank=True, null=True)),
                ('account_no', models.CharField(max_length=125, verbose_name='Nomor Bank Account')),
                ('account_name', models.CharField(blank=True, help_text='PT. Urban Solusi Digital, Anna Chairunissa, Irien Sasoko', max_length=125, null=True, verbose_name='Account Name')),
                ('account_type', models.CharField(blank=True, choices=[('BanK Transfer', 'BT'), ('Virtual Acount', 'VA'), ('Others', 'OTHERS')], default='BanK Transfer', max_length=125, null=True, verbose_name='Tipe Account')),
                ('bank_branch', models.CharField(blank=True, max_length=125, null=True, verbose_name='Cabang Bank')),
                ('default_currency', models.CharField(blank=True, default='IDR', max_length=125, null=True, verbose_name='Mata Uang default')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.Bank', verbose_name='Nama Bank')),
                ('creator', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='m_bank_account', to=settings.AUTH_USER_MODEL, verbose_name='createby')),
            ],
            options={
                'verbose_name_plural': 'BankAcounts',
                'db_table': 'm_bank_account',
                'ordering': ['bank', 'account_no', 'account_name'],
            },
        ),
    ]
